<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>2022Fall 計算機程式</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2022-07-13T09:01:14+08:00</updated><entry><title>TCExam</title><link href="./Will-TCExam-still-be-usable-after-nine-years.html" rel="alternate"></link><published>2022-07-05T17:00:00+08:00</published><updated>2022-07-13T09:01:14+08:00</updated><author><name>mdecycu</name></author><id>tag:None,2022-07-05:./Will-TCExam-still-be-usable-after-nine-years.html</id><summary type="html">&lt;p&gt;上一次採用 TCExam, 是在 2013 年 11 月 1 日, 多年之後, 這套線上考試系統, 仍然可以使用嗎?&lt;/p&gt;
</summary><content type="html">&lt;p&gt;上一次採用 TCExam, 是在 2013 年 11 月 1 日, 多年之後, 這套線上考試系統, 仍然可以使用嗎?&lt;/p&gt;


&lt;h2&gt;Ubuntu 22.04&lt;/h2&gt;
&lt;p&gt;為了要將 TCExam 安裝在 Ubuntu 22.04, 首先必須要先處理 /etc/netplan/net.yaml 中的設定:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
network:
  ethernets:
    enp0s3:
      dhcp6: false 
      dhcp4: false
      addresses:
        - 140.130.xx.xxx/24
        - 2001:288:6004:xx::xxx/64
      nameservers:
        addresses:
          - 168.95.1.1
          - 2001:b000:168::1
      routes:
        - to: default 
          via: 140.130.xx.254
        - to: ::/0      
          via: 2001:288:6004:xx::254
  version: 2
&lt;/pre&gt;

&lt;p&gt;網路設定完成後, 隨即進行更新與升級:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
sudo apt update
sudo apt upgrade
sudo apt autoremove
&lt;/pre&gt;

&lt;p&gt;接下來希望以最小安裝放入桌面, 可以執行&lt;/p&gt;
&lt;p&gt;sudo apt install --no-install-recommends ubuntu-desktop&lt;/p&gt;
&lt;p&gt;但是因為&lt;a href="https://bugs.launchpad.net/ubuntu/+source/mutter/+bug/1980667"&gt;這個 bug&lt;/a&gt; 尚未處理, 因此暫時先建立 /etc/apt/apt.conf.d/phased 應急. 之後應該要將這個檔案刪除, 採用官方除錯後的版本.&lt;/p&gt;
&lt;p&gt;接下來要安裝 nginx, 並且讓 php 解譯環境可以與 nginx 合用. 最後則是安裝 Postgresql, 以及 TCExam.&lt;/p&gt;
&lt;h2&gt;Windows&lt;/h2&gt;
&lt;p&gt;假如要將 TCExam 安裝在 Windows 10, 則可以安裝 Nginx 1.20.1 and PHP 8.1.7.&lt;/p&gt;
&lt;p&gt;讓 Nginx 可以與 PHP 合用則採下列設定, 表示要由 Nginx 接受外部 request PHP 程式執行, 實際上則使用 fastcgi 在近端 port 9123 執行遠端用戶所要求的 php 程式, 並將結果由 Nginx 代理傳回.&lt;/p&gt;
&lt;pre class="brush:jscript"&gt;
server { 
    listen    [::]:443 default ssl ipv6only=on;

    root C:/tcexam/tcexam;

    server_name    your.domain.name;
    ssl_certificate    C:/tcexam/fullchain.pem;
    ssl_certificate_key    C:/tcexam/privkey.pem;
    ssl_protocols    TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers    HIGH:!aNULL:!MD5;

    location /{ 
        index index.html index.php;
    }

    location ~ \.php$ {
        fastcgi_pass   127.0.0.1:9123;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }
}
&lt;/pre&gt;

&lt;p&gt;因此上述流程必須同時啟動 Nginx 與 php-cgi.exe 等兩則伺服器. Nginx 根據上述設定, 在 port 443 啟動, 而 php-cgi.exe 則由下列 nssm service 啟動.&lt;/p&gt;
&lt;p&gt;nssm install php8.1.7&lt;/p&gt;
&lt;pre class="brush:jscript"&gt;
Application path: C:\PHP8.1.7\php-cgi.exe
Startup directory: C:\PHP8.1.7
Arguments: -b 127.0.0.1:9123
&lt;/pre&gt;

&lt;p&gt;啟動 php-cgi:&lt;/p&gt;
&lt;p&gt;C:\PHP8.1.7\php-cgi.exe -b 127.0.0.1:9123&lt;/p&gt;
&lt;h2&gt;PostgreSQL&lt;/h2&gt;
&lt;p&gt;可攜的 PostgreSQL 採用&lt;a href="https://github.com/pgsql-tw/portable-pgsql"&gt;這裡介紹&lt;/a&gt; 的設定.&lt;/p&gt;
&lt;p&gt;建立 postgres 用戶時, 以系統管理員執行 cmd:&lt;/p&gt;
&lt;p&gt;net user username password /add&lt;/p&gt;
&lt;h2&gt;TCExam&lt;/h2&gt;
&lt;p&gt;由於 TCExam 的主核心程式在 2013 年之後只針對少數問題改版, 核心程式必須局部修改才能在最新的 PHP 架構中執行.&lt;/p&gt;
&lt;p&gt;在 10ff::1 電腦中 TCExam 位於 C:\tmp\tcexam&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.php.net/manual/en/function.pg-query.php"&gt;https://www.php.net/manual/en/function.pg-query.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;shared/code/tce_functions_form.php&lt;/p&gt;
&lt;p&gt;line 294 加入 ?? ''&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$str .= &amp;#39; name=&amp;quot;&amp;#39;.$field_name.&amp;#39;&amp;quot; id=&amp;quot;&amp;#39;.$field_name.&amp;#39;&amp;quot; value=&amp;quot;&amp;#39;.htmlspecialchars($value ?? &amp;#39;&amp;#39;, ENT_COMPAT, $l[&amp;#39;a_meta_charset&amp;#39;]).&amp;#39;&amp;quot; size=&amp;quot;20&amp;quot; maxlength=&amp;quot;&amp;#39;.$maxlen.&amp;#39;&amp;quot; title=&amp;quot;&amp;#39;.$description.&amp;#39;&amp;quot; /&amp;gt;&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;admin/code/tce_edit_user.php&lt;/p&gt;
&lt;p&gt;line 373 也是加入 ?? ''&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$user_birthdate = substr($m[&amp;#39;user_birthdate&amp;#39;] ?? &amp;#39;&amp;#39;, 0, 10);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;qrcode.php line 891 and 895 add intval()&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;rsblocks&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="nf"&gt;row&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;intval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;elseif&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;dataLength&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;eccLength&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="nf"&gt;row&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;dataLength&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;blocks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;dataLength&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;blocks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;rsblocks&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="nf"&gt;row&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ecc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;intval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;以下的 error:&lt;/p&gt;
&lt;p&gt;Fatal error: Uncaught TypeError: Session callback must have a return value of type bool, PgSql\Result returned in C:\tmp\tcexam\admin\code\tce_logout.php:38 Stack trace: #0 C:\tmp\tcexam\admin\code\tce_logout.php(38): session_destroy() #1 {main} thrown in C:\tmp\tcexam\admin\code\tce_logout.php on line 38&lt;/p&gt;
&lt;p&gt;必須修改 function F_session_destroy($key), 令其傳回 bool.&lt;/p&gt;
&lt;p&gt;至於 user 必須設 level 1, level 0 is anonymous.&lt;/p&gt;
&lt;p&gt;SMTP send mail:&lt;/p&gt;
&lt;p&gt;You need to edit the following configuration file with the right parameters:&lt;/p&gt;
&lt;p&gt;shared/config/tce_email_config.php&lt;/p&gt;
&lt;p&gt;You can also disable the email verification by editing:&lt;/p&gt;
&lt;p&gt;shared/config/tce_user_registration.php&lt;/p&gt;
&lt;p&gt;\tcexam\shared\code\tce_functions_session.php&lt;/p&gt;
&lt;p&gt;fix the following error:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
Fatal error: Uncaught TypeError: 
Session callback must have a return value of type bool, 
PgSql\Result returned in C:\tmp\tcexam\admin\code\tce_logout.php:38 Stack trace:
#0 C:\tmp\tcexam\admin\code\tce_logout.php(38): session_destroy() 
#1 {main} thrown in C:\tmp\tcexam\admin\code\tce_logout.php on line 38
&lt;/pre&gt;

&lt;p&gt;starting \tcexam\shared\code\tce_functions_session.php line 141.&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
function F_session_destroy($key)
{
    global $db;
    $key = F_escape_sql($db, $key);
    $sql = 'DELETE FROM '.K_TABLE_SESSIONS.' WHERE cpsession_id=\''.$key.'\'';
    //return F_db_query($sql, $db);
    F_db_query($sql, $db);
    // for PHP 8.1 Yen
    return true;
}
&lt;/pre&gt;

&lt;p&gt;configuration&lt;/p&gt;
&lt;p&gt;\tcexam\shared\config&lt;/p&gt;
&lt;p&gt;Letsencrypt&lt;/p&gt;
&lt;p&gt;stop nginx&lt;/p&gt;
&lt;p&gt;certbot certonly --standalone&lt;/p&gt;
&lt;p&gt;TCExam&lt;/p&gt;
&lt;p&gt;管理者帳號: admin, 原生安裝 default 密碼為: 1234&lt;/p&gt;
&lt;p&gt;Modules 模組&lt;/p&gt;
&lt;p&gt;Topics 主題&lt;/p&gt;
&lt;p&gt;Questions 題目&lt;/p&gt;
&lt;p&gt;Answers&lt;/p&gt;
&lt;p&gt;因為 nginx 與 php 已經設為 services, 因此啟動 TCExam 時, 只需要透過 pgsql 中的 start.bat 啟動資料庫伺服器即可執行運作.&lt;/p&gt;
&lt;p&gt;system32/gpedit.msc network -&amp;gt; QOS packet&lt;/p&gt;
&lt;p&gt;nginx 將  http 轉到 https&lt;/p&gt;
&lt;p&gt;return 302 https://your.domain.name;&lt;/p&gt;
&lt;p&gt;nginx只允許特定網址連線&lt;/p&gt;
&lt;p&gt;allow 2001:288:6004:xx::0/32;&lt;/p&gt;
&lt;p&gt;deny all;&lt;/p&gt;
&lt;p&gt;admin/code/tce_pdf_results.php&lt;/p&gt;
&lt;p&gt;line 586 加入 ?? '': if ($mq['question_type'] ?? '' == 4) {&lt;/p&gt;
&lt;p&gt;https://github.com/aosp-mirror/platform_frameworks_base/blob/de0fe2daafb769cc37ca922ffef6dbafb8c6cae2/data/fonts/DroidSansFallback.ttf&lt;/p&gt;
&lt;p&gt;將 .ttf 中文字型檔案轉為 tcpdf php 程式模組可以使用的格式 (.php, .z, .ctg.z 等三個檔案), 轉換程式 convert.php:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
&lt;?php
require_once(dirname(__FILE__).'/../shared/tcpdf/tcpdf.php');
$font = TCPDF_FONTS::addTTFfont('TaipeiSansTC.ttf');
?&gt;
&lt;/pre&gt;

&lt;p&gt;轉換時, 將 .ttf 字型檔案與 convert.php 放在 C:\tmp\tcexam\fonts, 執行前要先建立 C:\tmp\tcexam\shared\tcpdf\fonts 目錄, 轉換後的 .php, .z 與 .ctg.z 檔案, 會存入 C:\tmp\tcexam\shared\tcpdf\fonts 中, 字形設定檔案位於 C:\tmp\tcexam\shared\config\tce_pdf.php.&lt;/p&gt;
&lt;p&gt;設定 Test 時, 若只允許特定 IPv6 網段才可參加測試, 則可使用 2001:288:6004:xx:: 作為 IP 網段設定 (Authorized IP's 欄位).&lt;/p&gt;
&lt;h2&gt;Virtualbox&lt;/h2&gt;
&lt;p&gt;"C:\Program Files\Oracle\VirtualBox\VBoxManage.exe" internalcommands sethduuid tcexam_win10.vmdk&lt;/p&gt;</content><category term="Exam"></category><category term="TCExam"></category></entry><entry><title>2022 Fall 重整 cmsimde</title><link href="./2022-Fall-Reorganize-cmsimde.html" rel="alternate"></link><published>2022-07-05T11:00:00+08:00</published><updated>2022-07-11T00:03:45+08:00</updated><author><name>mdecycu</name></author><id>tag:None,2022-07-05:./2022-Fall-Reorganize-cmsimde.html</id><summary type="html">&lt;p&gt;cmsimde 的頁面一直是利用 Python, 以 Flask 架構直接寫出網頁內容.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;cmsimde 的頁面一直是利用 Python, 以 Flask 架構直接寫出網頁內容.&lt;/p&gt;


&lt;p&gt;直接用程式寫出 html 通常是在開發階段, 需要驗證全球資訊網站前後端流程結合正確無誤時採用. 也就是所編寫的全球資訊網動態後端的程式, 能夠產生全端所需要的網站內容, 但壞處顯而易見: 網頁的 layout 修改都必須直接進入 server 端修改 python 程式才能處理.&lt;/p&gt;
&lt;p&gt;更好的方式, 是採用 Template, 而且是在 Bootstrap 架構下的 Template.&lt;/p&gt;
&lt;p&gt;在處理 cmsimde 採用 Flask Template + Bootstrap 議題時, 除了 Python 語法, Flask 架構, 還需要了解如何處理 Bootstrap 中的 html 與 css 程式. 因此這是一個中階的全球資訊網站計算機程式專案.&lt;/p&gt;
&lt;h2&gt;Bootstrap&lt;/h2&gt;
&lt;p&gt;以下是採用 Bootstrap 建立網頁時的一個範例, 其中最外圍的 div 採用 container-fluid, 根據 &lt;a href="https://getbootstrap.com/docs/4.4/layout/overview/"&gt;Layout&lt;/a&gt; 的定義, 可知 container-fluid 在所有裝置中, 都會讓內容充滿頁面, 若將原先的 container-fluid 改為 container, 則只有在 extra-small 的情況下才會 100% 充滿螢幕.&lt;/p&gt;
&lt;pre class="brush:html"&gt;
&lt;div class="container-fluid"&gt;
    &lt;div class="row"&gt;
        &lt;div class="col-md-12"&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="row"&gt;
        &lt;div class="col-md-6"&gt;
        &lt;/div&gt;
        &lt;div class="col-md-6"&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="row"&gt;
        &lt;div class="col-md-8"&gt;
        &lt;/div&gt;
        &lt;div class="col-md-4"&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="row"&gt;
        &lt;div class="col-md-4"&gt;
        &lt;/div&gt;
        &lt;div class="col-md-4"&gt;
        &lt;/div&gt;
        &lt;div class="col-md-4"&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/pre&gt;

&lt;p&gt;從&lt;a href="https://github.com/mdecycu/cmsimde/commit/256f9d7ae6245ff85c155a4af08cfe1710abfd99"&gt;這裡&lt;/a&gt;可以看出, cmsimde 已經改用 container. 靜態頁面內容不再完全充滿螢幕. 若要測試 Bootstrap 中的頁面配置, 可以透過 &lt;a href="https://www.layoutit.com/build"&gt;Layoutit&lt;/a&gt; 進行測試.&lt;/p&gt;
&lt;h2&gt;Template&lt;/h2&gt;
&lt;p&gt;因為之前曾經用過 &lt;a href="https://github.com/zzzeek/mako"&gt;Mako&lt;/a&gt; (&lt;a href="https://docs.makotemplates.org/en/latest/"&gt;Doc&lt;/a&gt;), 接下來 cmsimde 的 template 修改, 或許可以採用.&lt;/p&gt;</content><category term="cmsimde"></category><category term="2022FallCP"></category></entry><entry><title>2022 Fall CP 課程</title><link href="./2022-Fall-Intro-to-computer-programming.html" rel="alternate"></link><published>2022-07-01T11:00:00+08:00</published><updated>2022-07-05T12:20:42+08:00</updated><author><name>mdecycu</name></author><id>tag:None,2022-07-01:./2022-Fall-Intro-to-computer-programming.html</id><summary type="html">&lt;p&gt;2022 Fall 計算機程式開場&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2022 Fall 計算機程式開場&lt;/p&gt;


&lt;h2&gt;Brython&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China#Construction_details"&gt;ROC 國旗規格&lt;/a&gt; &lt;a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E6%97%97#%E8%A7%84%E6%A0%BC"&gt;PROC 國旗規格&lt;/a&gt; &lt;a href="https://en.wikipedia.org/wiki/Flag_of_the_United_States#Specifications"&gt;USA 國旗規格&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/mdecourse/05930b1775b77293523b59b1bbb43e57"&gt;Gist Brython scripts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.arc.id.au/CanvasGraphics.html"&gt;Cango&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="./../downloads/turtle.py.txt"&gt;turtle.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="./../downloads/turtle_graphics.pdf"&gt;turtle_graphics.pdf&lt;/a&gt; (&lt;a href="https://www.cs.auckland.ac.nz/compsci111ssc/lectures/LectureSlides/L25_Python3.pdf"&gt;source&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;a href="./../downloads/turtle_graphics_2.pdf"&gt;turtle_graphics_2.pdf&lt;/a&gt; (&lt;a href="https://eecs.wsu.edu/~schneidj/PyBook/chap13.pdf"&gt;source&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;a href="./../downloads/turtle_graphics_3.pdf"&gt;turtle_graphics_3.pdf&lt;/a&gt; (&lt;a href="https://www.cs.utexas.edu/~byoung/summer-python-class/summer15-turtle-graphics.pdf"&gt;source&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/brython.js"&gt;
&lt;/script&gt;
&lt;script src="./../cmsimde/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- for ggame --&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/jquery-3.3.1.min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/jquery-ui.1.12.1.min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/pixi-3.0.5.min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/buzz-1.2.1.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/bs.js"&gt;&lt;/script&gt;
&lt;script src="./../downloads/brython_modules.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- Cango 程式庫 --&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/Cango-24v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/CangoAxes-6v01-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/gearUtils-09.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/SVGpathUtils-6v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/sylvester.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/PrairieDraw.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- for Konva 程式庫 --&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/konva.min.js"&gt;&lt;/script&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 FileSaver 與 filereader --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/FileSaver.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/filereader.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 ace --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/ace.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/ext-language_tools.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/mode-python3.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/snippets/python.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/javascript"&gt;
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100"&gt;add 1 to 100&lt;/button&gt;&lt;button id="p261"&gt;p261&lt;/button&gt;&lt;button id="rocflag"&gt;ROC flag&lt;/button&gt;&lt;button id="procflag"&gt;PROC flag&lt;/button&gt;&lt;button id="usaflag"&gt;USA flag&lt;/button&gt;&lt;button id="drawgrid"&gt;Draw Grid&lt;/button&gt;&lt;button id="grid_rect"&gt;Random Rect&lt;/button&gt;&lt;button id="rect_walk"&gt;Rect Walk&lt;/button&gt;&lt;button id="rect_u_walk"&gt;Rect U Walk&lt;/button&gt;&lt;button id="rect_rev_u_walk"&gt;Rect rev U Walk&lt;/button&gt;&lt;button id="sgcr"&gt;單節貪食蛇&lt;/button&gt;&lt;button id="cfrr"&gt;5 個紅點方塊&lt;/button&gt;&lt;button id="snake"&gt;Snake&lt;/button&gt;&lt;button id="bsnake"&gt;BSnake&lt;/button&gt;&lt;button id="auto_guess"&gt;auto_guess&lt;/button&gt;&lt;button id="ball"&gt;ball&lt;/button&gt;&lt;button id="bezier"&gt;bezier&lt;/button&gt;&lt;button id="big_lotto"&gt;big_lotto&lt;/button&gt;&lt;button id="brython_kw"&gt;brython_kw&lt;/button&gt;&lt;button id="bunny"&gt;bunny&lt;/button&gt;&lt;button id="cango_spur"&gt;cango_spur&lt;/button&gt;&lt;button id="cango_spur1"&gt;cango_spur1&lt;/button&gt;&lt;button id="cango_three_gears"&gt;cango_three_gears&lt;/button&gt;&lt;button id="clear"&gt;clear&lt;/button&gt;&lt;button id="clock"&gt;clock&lt;/button&gt;&lt;button id="convert_temp"&gt;convert_temp&lt;/button&gt;&lt;button id="deepmerge"&gt;deepmerge&lt;/button&gt;&lt;button id="display_stl"&gt;display_stl&lt;/button&gt;&lt;button id="draw"&gt;draw&lt;/button&gt;&lt;button id="ex1"&gt;ex1&lt;/button&gt;&lt;button id="ex2"&gt;ex2&lt;/button&gt;&lt;button id="ex3"&gt;ex3&lt;/button&gt;&lt;button id="ex4"&gt;ex4&lt;/button&gt;&lt;button id="fibo"&gt;fibo&lt;/button&gt;&lt;button id="fourbar"&gt;fourbar&lt;/button&gt;&lt;button id="guess_a_number"&gt;guess_a_number&lt;/button&gt;&lt;button id="hw1_1"&gt;hw1_1&lt;/button&gt;&lt;button id="hw1_2"&gt;hw1_2&lt;/button&gt;&lt;button id="keycode"&gt;Keycode&lt;/button&gt;&lt;button id="knova1"&gt;knova1&lt;/button&gt;&lt;button id="merge3"&gt;merge3&lt;/button&gt;&lt;button id="power_lotto"&gt;power_lotto&lt;/button&gt;&lt;button id="spur"&gt;spur&lt;/button&gt;&lt;button id="spur_w_form"&gt;spur_w_form&lt;/button&gt;&lt;button id="stl_binary_ascii"&gt;stl_binary_ascii&lt;/button&gt;&lt;button id="stl_writer"&gt;stl_writer&lt;/button&gt;&lt;button id="tetris"&gt;Tetris&lt;/button&gt;&lt;button id="auto_tetris"&gt;Auto Tetris&lt;/button&gt;&lt;button id="turtle1"&gt;turtle1&lt;/button&gt;&lt;button id="turtle2"&gt;turtle2&lt;/button&gt;&lt;button id="turtle3"&gt;turtle3&lt;/button&gt;&lt;button id="turtle4"&gt;turtle4&lt;/button&gt;&lt;button id="turtle5"&gt;turtle5&lt;/button&gt;&lt;button id="turtle6"&gt;turtle6&lt;/button&gt;&lt;button id="turtle7"&gt;turtle7&lt;/button&gt;&lt;button id="turtle8"&gt;turtle8&lt;/button&gt;&lt;button id="twl_link_ik"&gt;twl_link_ik&lt;/button&gt;&lt;button id="webcam"&gt;webcam&lt;/button&gt;&lt;button id="websocket"&gt;websocket&lt;/button&gt;&lt;button id="ycqsort"&gt;ycqsort&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- ######################  editor1 開始 ###################### --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor1" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run1"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console1"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console1"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd1"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console1"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 這裡的畫布 id 為 brython_div --&gt;&lt;/p&gt;
&lt;div id="brython_div"&gt;&lt;/div&gt;
&lt;!-- graphics-column is for ggame --&gt;
&lt;div class="col-md-0" height="1" id="graphics-column" width="1"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- ######################  editor1 結束 ###################### --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
&lt;/script&gt;
&lt;!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"
add1to100 = button2(add1to100_url)
doc["add1to100"].bind('click', add1to100.do)
################################# p261 start 
p261_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/980606effcd29635307d6474718cd4a7ef016747/p261.py"
p261 = button2(p261_url)
doc["p261"].bind('click', p261.do)
################################## p261 end
################################## rocflag start
rocflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/03dd57e75b6b5be2b3d64c4fd15758e80cb9bf36/roc_flag.py"
rocflag = button2(rocflag_url)
doc["rocflag"].bind("click", rocflag.do)
################################## rocflag end
################################## procflag start
procflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/03dd57e75b6b5be2b3d64c4fd15758e80cb9bf36/proc_flag.py"
procflag = button2(procflag_url)
doc["procflag"].bind("click", procflag.do)
################################## rocflag end
################################## drawgrid start
drawgrid_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/070f424f2e9a99617009af216762163f66628e6d/draw_grid.py"
drawgrid = button2(drawgrid_url)
doc["drawgrid"].bind("click", drawgrid.do)
################################## drawgrid end
################################## grid_rect start
grid_rect_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/f3683ed24646f63625b616e9cb8e61a9a08ae9be/draw_grid_random_rect.py"
grid_rect = button2(grid_rect_url)
doc["grid_rect"].bind("click", grid_rect.do)
################################## grid_rect end
################################## rect_walk start
rect_walk_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/fdf9749488a59f00c2398aede8b6cbe8c0ed5d81/rect_walk.py"
rect_walk = button2(rect_walk_url)
doc["rect_walk"].bind("click", rect_walk.do)
################################## rect_walk end
################################## rect_walk start
rect_u_walk_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/63645d3f5823fd22bdb02e840e46e551afee4087/rect_u_walk.py"
rect_u_walk = button2(rect_u_walk_url)
doc["rect_u_walk"].bind("click", rect_u_walk.do)
################################## rect_walk end
################################## rect_rev_u_walk start
rect_rev_u_walk_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/165e7792091d4b91b9923592242bfaf28258a719/rect_rev_u_walk.py"
rect_rev_u_walk = button2(rect_rev_u_walk_url)
doc["rect_rev_u_walk"].bind("click", rect_rev_u_walk.do)
################################## rect_rev_u_walk end
################################## single green chasing red start
sgcr_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/9f7c1cda3a51b061cde00d104054fb3ce19ffd1a/single_green_chasing_red.py"
sgcr = button2(sgcr_url)
doc["sgcr"].bind("click", sgcr.do)
################################## single green chasing red end
################################## chasing 5 red rect start
# execute only one time
#cfrr_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/c43844d62a0bd7eb6617d5222ba93b5de033a63f/chasing_5_red_rect.py"
# continuously execution
cfrr_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/7e0563617649a2532ed0fc903858e135cbcedcd0/chasing_5_red_rect.py"
cfrr = button2(cfrr_url)
doc["cfrr"].bind("click", cfrr.do)
################################## chasing 5 red rect end
################################## usaflag start
usaflag_url = "https://gist.githubusercontent.com/mdecourse/2f56974a40da7a218dbaef376a5b4ca4/raw/144b62fa07987d5ab6f369ae3661c645405e1872/usaflag.py"
usaflag = button2(usaflag_url)
doc["usaflag"].bind("click", usaflag.do)
################################## usaflag end
################################## snake start
snake_url = "https://gist.githubusercontent.com/mdecourse/d55158478f4f8fcbfedd455f8be8c7b6/raw/f29309745a98687ed5c41cf90d28ef25a1e48dd4/snake_brython_div.py"
snake = button2(snake_url)
doc["snake"].bind("click", snake.do)
################################## snake end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecourse/2a8f213b6858a40481d17556c8a2fe86/raw/0a4a824493865dc7cf56977d03c9438d002b4268/kmlo_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## auto_guess start
auto_guess_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/auto_guess.py"
auto_guess = button2(auto_guess_url)
doc["auto_guess"].bind("click", auto_guess.do)
################################## auto_guess end
################################## ball start
ball_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/ball.py"
ball = button2(ball_url)
doc["ball"].bind("click", ball.do)
################################## ball end
################################## bezier start
bezier_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/79794cbd97d0846e2c9df14d54118d5e00a97a22/bezier.py"
bezier = button2(bezier_url)
doc["bezier"].bind("click", bezier.do)
################################## bezier end
################################## big_lotto start
big_lotto_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/big_lotto.py"
big_lotto = button2(big_lotto_url)
doc["big_lotto"].bind("click", big_lotto.do)
################################## big_lotto end
################################## brython_kw start
brython_kw_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/brython_kw.py"
brython_kw = button2(brython_kw_url)
doc["brython_kw"].bind("click", brython_kw.do)
################################## brython_kw end
################################## bunny start
bunny_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/bunny.py"
bunny = button2(bunny_url)
doc["bunny"].bind("click", bunny.do)
################################## bunny end
################################## cango_spur start
cango_spur_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/cango_spur.py"
cango_spur = button2(cango_spur_url)
doc["cango_spur"].bind("click", cango_spur.do)
################################## cango_spur end
################################## cango_spur1 start
cango_spur1_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/cango_spur1.py"
cango_spur1 = button2(cango_spur1_url)
doc["cango_spur1"].bind("click", cango_spur1.do)
################################## cango_spur1 end
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/cango_three_gears.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## clear start
clear_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/clear.py"
clear = button2(clear_url)
doc["clear"].bind("click", clear.do)
################################## clear end
################################## clock start
clock_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/clock.py"
clock = button2(clock_url)
doc["clock"].bind("click", clock.do)
################################## clock end
################################## convert_temp start
convert_temp_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/convert_temp.py"
convert_temp = button2(convert_temp_url)
doc["convert_temp"].bind("click", convert_temp.do)
################################## convert_temp end
################################## display_stl start
display_stl_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/display_stl.py"
display_stl = button2(display_stl_url)
doc["display_stl"].bind("click", display_stl.do)
################################## display_stl end
################################## draw start
draw_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/draw.py"
draw = button2(draw_url)
doc["draw"].bind("click", draw.do)
################################## draw end
################################## ex1 start
ex1_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/ex1.py"
ex1 = button2(ex1_url)
doc["ex1"].bind("click", ex1.do)
################################## ex1 end
################################## ex2 start
ex2_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/ex2.py"
ex2 = button2(ex2_url)
doc["ex2"].bind("click", ex2.do)
################################## ex2 end
################################## ex3 start
ex3_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/ex3.py"
ex3 = button2(ex3_url)
doc["ex3"].bind("click", ex3.do)
################################## ex3 end
################################## ex4 start
ex4_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/ex4.py"
ex4 = button2(ex4_url)
doc["ex4"].bind("click", ex4.do)
################################## ex4 end
################################## fourbar start
fourbar_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/fa232853da824f6dd5ae1f61a96543e6106c04b5/fourbar.py"
fourbar = button2(fourbar_url)
doc["fourbar"].bind("click", fourbar.do)
################################## fourbar end
################################## guess_a_number start
guess_a_number_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/guess_a_number.py"
guess_a_number = button2(guess_a_number_url)
doc["guess_a_number"].bind("click", guess_a_number.do)
################################## guess_a_number end
################################## hw1_1 start
hw1_1_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/hw1-1.py"
hw1_1 = button2(hw1_1_url)
doc["hw1_1"].bind("click", hw1_1.do)
################################## hw1_1 end
################################## hw1_2 start
hw1_2_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/hw1-2.py"
hw1_2 = button2(hw1_2_url)
doc["hw1_2"].bind("click", hw1_2.do)
################################## hw1-2 end
################################## knova1 start
knova1_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/konva1.py"
knova1 = button2(knova1_url)
doc["knova1"].bind("click", knova1.do)
################################## knova1 end
################################## power_lotto start
power_lotto_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/power_lotto.py"
power_lotto = button2(power_lotto_url)
doc["power_lotto"].bind("click", power_lotto.do)
################################## power_lotto end
################################## spur start
spur_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/e6d0cc9302f7b43bd36321d69c2433bec2cbcfd4/spur.py"
spur = button2(spur_url)
doc["spur"].bind("click", spur.do)
################################## spur end
################################## spur_w_form start
spur_w_form_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/e6d0cc9302f7b43bd36321d69c2433bec2cbcfd4/spur_w_form.py"
spur_w_form = button2(spur_w_form_url)
doc["spur_w_form"].bind("click", spur_w_form.do)
################################## spur_w_form end
################################## stl_binary_ascii start
stl_binary_ascii_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/stl_binary_ascii.py"
stl_binary_ascii = button2(stl_binary_ascii_url)
doc["stl_binary_ascii"].bind("click", stl_binary_ascii.do)
################################## stl_binary_ascii end
################################## stl_writer start
stl_writer_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/stl_writer.py"
stl_writer = button2(stl_writer_url)
doc["stl_writer"].bind("click", stl_writer.do)
################################## stl_writer end
################################## turtle1 start
turtle1_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/turtle1.py"
turtle1 = button2(turtle1_url)
doc["turtle1"].bind("click", turtle1.do)
################################## turtle1 end
################################## turtle2 start
turtle2_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/turtle2.py"
turtle2 = button2(turtle2_url)
doc["turtle2"].bind("click", turtle2.do)
################################## turtle2 end
################################## turtle3 start
turtle3_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/turtle3.py"
turtle3 = button2(turtle3_url)
doc["turtle3"].bind("click", turtle3.do)
################################## turtle3 end
################################## turtle4 start
turtle4_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/turtle4.py"
turtle4 = button2(turtle4_url)
doc["turtle4"].bind("click", turtle4.do)
################################## turtle4 end
################################## turtle5 start
turtle5_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/turtle5.py"
turtle5 = button2(turtle5_url)
doc["turtle5"].bind("click", turtle5.do)
################################## turtle5 end
################################## turtle6 start
turtle6_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/turtle6.py"
turtle6 = button2(turtle6_url)
doc["turtle6"].bind("click", turtle6.do)
################################## turtle6 end
################################## turtle7 start
turtle7_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/turtle7.py"
turtle7 = button2(turtle7_url)
doc["turtle7"].bind("click", turtle7.do)
################################## turtle7 end
################################## turtle8 start
turtle8_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/turtle8.py"
turtle8 = button2(turtle8_url)
doc["turtle8"].bind("click", turtle8.do)
################################## turtle8 end
################################## twl_link_ik start
twl_link_ik_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/twl_link_ik.py"
twl_link_ik = button2(twl_link_ik_url)
doc["twl_link_ik"].bind("click", twl_link_ik.do)
################################## twl_link_ik end
################################## webcam start
webcam_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/webcam.py"
webcam = button2(webcam_url)
doc["webcam"].bind("click", webcam.do)
################################## webcam end
################################## ycqsort start
ycqsort_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/cb022783696ed8f2e8050f1427a05e652d5fa686/ycqsort.py"
ycqsort = button2(ycqsort_url)
doc["ycqsort"].bind("click", ycqsort.do)
################################## ycqsort end
################################## fibo start
fibo_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/fa232853da824f6dd5ae1f61a96543e6106c04b5/fibo_ex.py"
fibo = button2(fibo_url)
doc["fibo"].bind("click", fibo.do)
################################## fibo end
################################## deepmerge start
deepmerge_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/e89e0f978a015bf9361270a389a5b84e6244ed5b/deepmerge.py"
deepmerge = button2(deepmerge_url)
doc["deepmerge"].bind("click", deepmerge.do)
################################## deepmerge end
################################## merge3 start
merge3_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/8a7452a451e57e4de720f22fc2fc8abd6aac0bc8/merge3.py"
merge3 = button2(merge3_url)
doc["merge3"].bind("click", merge3.do)
################################## merge3 end
################################## websocket start
websocket_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/86dda666271974d6c520086700db14a2124f0ae8/websocket.py"
websocket = button2(websocket_url)
doc["websocket"].bind("click", websocket.do)
################################## websocket end
################################## keycode start
keycode_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/ba159101705aaf8ba182a442b455425a48a85610/keycode.py"
keycode = button2(keycode_url)
doc["keycode"].bind("click", keycode.do)
################################## keycode end
################################## tetris start
tetris_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/738223b424c3f5f12961070aa8a75185177420b6/pygame_to_brython_tetris.py"
tetris = button2(tetris_url)
doc["tetris"].bind("click", tetris.do)
################################## tetris end
################################## auto tetris start
auto_tetris_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/45740f32e5c3ee292a88df8a47f46e60039b77f9/pygame_to_brython_tetris_ai.py"
auto_tetris = button2(auto_tetris_url)
doc["auto_tetris"].bind("click", auto_tetris.do)
################################## auto tetris end
&lt;/script&gt;
&lt;/p&gt;</content><category term="Courses"></category><category term="2022FallCP"></category></entry></feed>